// Generated by view binder compiler. Do not edit!
package gfg.bangkit.capstone.tunecheck.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import gfg.bangkit.capstone.tunecheck.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton btnCustom;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputEditText etFirstName;

  @NonNull
  public final TextInputEditText etLastName;

  @NonNull
  public final CardView firstCard;

  @NonNull
  public final FrameLayout layoutStack;

  @NonNull
  public final LinearLayout main;

  private ActivityUpdateProfileBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton btnCustom, @NonNull Button btnUpdate,
      @NonNull TextInputEditText etEmail, @NonNull TextInputEditText etFirstName,
      @NonNull TextInputEditText etLastName, @NonNull CardView firstCard,
      @NonNull FrameLayout layoutStack, @NonNull LinearLayout main) {
    this.rootView = rootView;
    this.btnCustom = btnCustom;
    this.btnUpdate = btnUpdate;
    this.etEmail = etEmail;
    this.etFirstName = etFirstName;
    this.etLastName = etLastName;
    this.firstCard = firstCard;
    this.layoutStack = layoutStack;
    this.main = main;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCustom;
      AppCompatButton btnCustom = ViewBindings.findChildViewById(rootView, id);
      if (btnCustom == null) {
        break missingId;
      }

      id = R.id.btnUpdate;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etFirstName;
      TextInputEditText etFirstName = ViewBindings.findChildViewById(rootView, id);
      if (etFirstName == null) {
        break missingId;
      }

      id = R.id.etLastName;
      TextInputEditText etLastName = ViewBindings.findChildViewById(rootView, id);
      if (etLastName == null) {
        break missingId;
      }

      id = R.id.firstCard;
      CardView firstCard = ViewBindings.findChildViewById(rootView, id);
      if (firstCard == null) {
        break missingId;
      }

      id = R.id.layoutStack;
      FrameLayout layoutStack = ViewBindings.findChildViewById(rootView, id);
      if (layoutStack == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      return new ActivityUpdateProfileBinding((LinearLayout) rootView, btnCustom, btnUpdate,
          etEmail, etFirstName, etLastName, firstCard, layoutStack, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
