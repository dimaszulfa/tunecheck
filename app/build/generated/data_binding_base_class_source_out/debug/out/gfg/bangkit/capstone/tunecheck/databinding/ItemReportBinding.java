// Generated by view binder compiler. Do not edit!
package gfg.bangkit.capstone.tunecheck.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import gfg.bangkit.capstone.tunecheck.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemReportBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cvVerif;

  @NonNull
  public final TextView tvDescReport;

  @NonNull
  public final TextView tvUsername;

  @NonNull
  public final TextView tvVerif;

  private ItemReportBinding(@NonNull LinearLayout rootView, @NonNull CardView cvVerif,
      @NonNull TextView tvDescReport, @NonNull TextView tvUsername, @NonNull TextView tvVerif) {
    this.rootView = rootView;
    this.cvVerif = cvVerif;
    this.tvDescReport = tvDescReport;
    this.tvUsername = tvUsername;
    this.tvVerif = tvVerif;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_report, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvVerif;
      CardView cvVerif = ViewBindings.findChildViewById(rootView, id);
      if (cvVerif == null) {
        break missingId;
      }

      id = R.id.tvDescReport;
      TextView tvDescReport = ViewBindings.findChildViewById(rootView, id);
      if (tvDescReport == null) {
        break missingId;
      }

      id = R.id.tvUsername;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      id = R.id.tvVerif;
      TextView tvVerif = ViewBindings.findChildViewById(rootView, id);
      if (tvVerif == null) {
        break missingId;
      }

      return new ItemReportBinding((LinearLayout) rootView, cvVerif, tvDescReport, tvUsername,
          tvVerif);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
